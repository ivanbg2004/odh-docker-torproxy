#!/bin/bash
set -e

# internal/dns.sh

# Configures dnsmasq to use Tor's DNSPort for DNS resolution.

log() {
  echo "$(date -I) - $1"
}

# --- Configuration ---
DNSMASQ_CONFIG="/etc/dnsmasq.d/tor-dns.conf"
DEFAULT_TOR_DNS_PORT="53"  # Fallback if not in torrc
TOR_CONFIG="/etc/tor/torrc" # Location of torrc

# --- Helper Functions ---

# Function to get a Tor config option from torrc
get_torrc_option() {
  local option="$1"
  grep "^${option}" "$TOR_CONFIG" | awk '{print $2}'
}

# --- Main Script ---

log "Configuring DNS using dnsmasq and Tor..."

# Get Tor DNS port from torrc, or use default
TOR_DNS_PORT=$(get_torrc_option "DNSPort")
if [ -z "$TOR_DNS_PORT" ]; then
  log "WARNING: DNSPort not found in $TOR_CONFIG. Using default: $DEFAULT_TOR_DNS_PORT"
  TOR_DNS_PORT="$DEFAULT_TOR_DNS_PORT"
fi

# Validate TOR_DNS_PORT
if ! [[ "$TOR_DNS_PORT" =~ ^[0-9]+$ ]]; then
  log "ERROR: DNSPort is malformed or not a number: $TOR_DNS_PORT"
  exit 1
fi

log "Using Tor DNS on port: $TOR_DNS_PORT"

# Determine the network interface
IFACE=$(ip route show default | awk '/default/ {print $5}')
if [ -z "$IFACE" ]; then
  log "ERROR: Could not determine default network interface."
  exit 1
fi

log "Using network interface: $IFACE"

# Create resolv.conf
cat > /etc/resolv.conf <<EOF
# Generated by OD&H TorProxy; DO NOT EDIT
nameserver 127.0.0.1
options allow-domains=onion
options rotate
options timeout:1
search .
EOF

log "Generated /etc/resolv.conf"

# Create dnsmasq config
cat > "$DNSMASQ_CONFIG" <<EOF
pid-file=/var/run/dnsmasq.pid
interface=$IFACE
user=dnsmasq
group=dnsmasq
bind-dynamic
no-resolv
no-poll
no-negcache
bogus-priv
domain-needed
cache-size=1500
min-port=4096
server=127.0.0.1#$TOR_DNS_PORT
server=::1#$TOR_DNS_PORT
log-facility=/var/log/dnsmasq/dnsmasq.log
EOF

log "Generated $DNSMASQ_CONFIG"

# Create log directory and set ownership
mkdir -p /var/log/dnsmasq
chown dnsmasq:dnsmasq /var/log/dnsmasq

# Start dnsmasq
log "Starting dnsmasq..."
if ! dnsmasq --test; then
    log "ERROR: dnsmasq configuration test failed."
    exit 1
fi

dnsmasq

log "dnsmasq started successfully."

exit 0
